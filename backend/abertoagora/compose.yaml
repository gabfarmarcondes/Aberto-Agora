version: '3.8'

services:
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:8.17.3'
    container_name: elasticSearch
    environment:
      - 'ELASTIC_PASSWORD=AnSTXrcuYAL5kSc8Wsjq'
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
    ports:
      - '9200:9200'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: 'mysql:latest'
    container_name: mysql-container
    environment:
      - 'MYSQL_DATABASE=abertoAgoraDatabase'
      - 'MYSQL_ROOT_PASSWORD=root'
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  spring-boot:
    build:
      context: .
    image: abertoagora
    container_name: spring-app
    environment:
      - 'spring.datasource.url=jdbc:mysql://mysql:3306/abertoAgoraDatabase?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC'
      - 'spring.datasource.username=root'
      - 'spring.datasource.password=root'
      - 'spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver'
      - 'spring.elasticsearch.uris=http://elasticsearch:9200'
      - 'spring.elasticsearch.username=elastic'
      - 'spring.elasticsearch.password=AnSTXrcuYAL5kSc8Wsjq'
      - 'elasticsearch.enabled=true'
    ports:
      - '8080:8080'
    depends_on:
      elasticsearch:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: {}
